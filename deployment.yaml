# mariadb
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: mariadb
spec:
  selector:
    matchLabels:
      app: mariadb
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mariadb
    spec:
      containers:
      - image: milkchocolate22/mariadb:latest
        name: mariadb
        env:
        - name: MYSQL_DATABASE
          value: "milkcocholate"
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dbsecret
              key: root_password
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: dbsecret
              key: user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dbsecret
              key: password
        ports:
        - containerPort: 3306
          name: mariadb
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mariadb-pv-claim
---
# phpmyadmin
apiVersion: v1
kind: Pod
metadata:
  name: phpmyadmin
  labels:
    name: phpmyadmin
spec:
  containers:
    - name: phpmyadmin
      image: milkchocolate22/phpmyadmin:latest
      env:
        - name: PMA_HOST
          value: mariadb-http
      ports:
        - containerPort: 80
          name: phpmyadmin
---
# flask-web-app
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  generation: 1
  labels:
    run: flask-web-app
  name: flask-web-app
  namespace: default
  resourceVersion: "44093"
spec:
  replicas: 1
  selector:
    matchLabels:
      run: flask-web-app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: flask-web-app
    spec:
      containers:
      - image: milkchocolate22/flask_web_app:latest
        imagePullPolicy: Always
        name: flask-web-app
        ports:
        - containerPort: 5000
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
# jupyter
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  generation: 1
  labels:
    run: jupyter
  name: jupyter
  namespace: default
  resourceVersion: "44093"
spec:
  replicas: 1
  selector:
    matchLabels:
      run: jupyter
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: jupyter
    spec:
      containers:
      - image: milkchocolate22/jupyter:latest
        imagePullPolicy: Always
        name: jupyter
        volumeMounts:
        - name: jupyter-volume
          mountPath: /home/jovyan/work/bitbank/new
        ports:
        - containerPort: 8888
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      volumes:
      - name: jupyter-volume
        emptyDir: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
